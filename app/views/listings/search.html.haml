%style
  body, #map { height: 100%; margin: 0px; }
- if @results.count > 0
  #search-results-container.row{ :class => ("no-results-css-fix" if @results.count == 0) }
    .col-md-7.left-column
      / Filter settings
      .col-md-12
        .col-md-12
          .panel.panel-default
            .panel-body
              .row
                .col-md-6
                  = link_to "+ Filter Search", "#", :id => "filter-search-link"
                .col-md-6.text-right
                  = @results.count
                  results for:
                  %strong
                    = params[:search]
                  - if !params[:city].nil? && params[:city] != ""
                    in
                    %strong
                      = params[:city]
            #display-filter-settings
              %hr
              .row
                .col-md-12
                  .col-md-12
                    = form_tag({:controller => "listings", :action => "filter_search"}, :method => :get) do
                      .row
                        .col-md-9
                          .input-group.search-input-group
                            %span#search-icon-addon.input-group-addon
                              %span.glyphicon.glyphicon-search
                            = text_field_tag :search, nil, :class => "form-control", :placeholder => "        Search for spaces.", "aria-describedby" => "search-icon-addon"

      / Display results
      .col-md-12
        - @results.each do |listing|
          .col-md-12
            .panel.panel-default.search-result-container
              .panel-body
                .col-md-6.info-side.text-right
                  %big
                    %strong
                      = link_to listing.name, listing_path(listing)
                  %p
                    = "#{listing.location.city}, #{listing.location.state}"
                  Posted by:
                  = link_to listing.user.first_name, root_path, :class => "primary-color"
                  %p
                    = pluralize(listing.pictures.count, "photo")
                  .row.text-left
                    .col-md-12
                      .col-md-12
                        %i.fa.fa-star-o.fa-lg.fa-fw
                        %small
                          = link_to "Save"
                .col-md-6.pictures-side
                  .search-result-carousel
                    - if listing.pictures
                      - listing.pictures.each do |pic|
                        .item
                          = image_tag pic.image.url(:original)
                .panel.panel-default.result-rates-display
                  .panel-body
                    %ul.list-unstyled
                      - listing.rates.each do |rate|
                        %li
                          %span.rate-amount
                            = number_to_currency(rate.amount).gsub(/\.00$/, "")
                          %span.rate-date-range
                            = rate.date_range
      = render 'layouts/footer'
             
    .col-md-5.right-column
      #google-map
        #map-outer-container.col-md-12
          #map.search-results-map
- else
  #search-results-container.row
    .col-md-7.left-column
      / Filter settings
      .col-md-12
        .col-md-12
          .panel.panel-default
            .panel-body
              .row
                .col-md-6
                  = link_to "+ Filter Search", "#", :id => "filter-search-link"
                .col-md-6.text-right
                  Results for:
                  %strong
                    = params[:search]
                  - if !params[:city].nil? && params[:city] != ""
                    in
                    %strong
                      = params[:city]

- if (@results.length > 0)           
  :javascript
    var Hilitor;Hilitor=function(e,t){var i,o,n,s,h,r,a,l,d;l=document.getElementById(e)||document.body,n=t||"EM",a=new RegExp("^(?:"+n+"|SCRIPT|FORM|SPAN)$"),o=["#ff6","#a0ffff","#9f9","#f99","#f6f"],d=[],i=0,s="",h=!1,r=!1,this.setMatchType=function(e){switch(e){case"left":this.openLeft=!1,this.openRight=!0;break;case"right":this.openLeft=!0,this.openRight=!1;break;case"open":this.openLeft=this.openRight=!0;break;default:this.openLeft=this.openRight=!1}},this.setRegex=function(e){var t;e=e.replace(/^[^\w]+|[^\w]+$/g,"").replace(/[^\w'-]+/g,"|"),t="("+e+")",this.openLeft||(t="\\b"+t),this.openRight||(t+="\\b"),s=new RegExp(t,"i")},this.getRegex=function(){var e;return e=s.toString(),e=e.replace(/(^\/(\\b)?|\(|\)|(\\b)?\/i$)/g,""),e=e.replace(/\|/g," ")},this.hiliteWords=function(e){var t,h,r,l,f;if(void 0!==e&&e&&s&&!a.test(e.nodeName)){if(e.hasChildNodes())for(h=0;h<e.childNodes.length;)this.hiliteWords(e.childNodes[h]),h++;3===e.nodeType&&(l=e.nodeValue)&&(f=s.exec(l))&&(d[f[0].toLowerCase()]||(d[f[0].toLowerCase()]=o[i++%o.length]),r=document.createElement(n),r.appendChild(document.createTextNode(f[0])),r.style.backgroundColor=d[f[0].toLowerCase()],r.style.fontStyle="inherit",r.style.color="#000",t=e.splitText(f.index),t.nodeValue=t.nodeValue.substring(f[0].length),e.parentNode.insertBefore(r,t))}},this.remove=function(){var e,t,i;for(e=document.getElementsByTagName(n);e.length&&(t=e[0]);)i=t.parentNode,i.replaceChild(t.firstChild,t),i.normalize()},this.apply=function(e){this.remove(),void 0!==e&&e&&(this.setRegex(e),this.hiliteWords(l))}};
  
    $(document).ready(function(event) {
      myHilitor = new Hilitor("table");
      myHilitor.apply("#{@search}");


      // Search Result Carousel of images
      $(".search-result-carousel").owlCarousel({
           items : 1,
           itemsDesktop : [1199,3],
           itemsDesktopSmall : [979,3]
     
      });


      // Shows the Filter Search settings when the link "Filter Search" link is clicked
      $("#filter-search-link").on("click", function(e) {
        e.preventDefault();

        $("#display-filter-settings").slideToggle();
      });

      // Tooltip for images on hover
      // $(".pictures-side").tooltipster({
      //   content: $("<p><strong>Hold Click + Drag</strong> to the <strong>LEFT</strong> to see more photos!</p>"),
      //   hideOnClick: true
      // });
      
    }); //end document.ready




    
    var handler = Gmaps.build('Google');
    var markers;
    handler.buildMap({ internal: {id: 'map'}, provider: { scrollwheel: false }}, function(){
      markers = handler.addMarkers(#{@coordinates});
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
      //handler.getMap().setZoom(14);

      google.maps.event.trigger(markers, 'click');
    });

    $(".search-result-container").on("hover", function() {
      
    });